#!/usr/bin/env ruby

require 'optparse'

BRIDGE_HOST = 'eth0'
BRIDGE_NAME = 'br0'
BRIDGE_IP   = '192.168.1.1'

def linux?
  RUBY_PLATFORM.downcase.include?('linux')
end

def exit_with_message(message)
  STDERR.puts(message)
  exit 1
end

def configure_bridge(name, ip)
  puts "Setting up bridge interface #{name} at #{ip}"
  `sudo brctl addbr #{name}`
  `sudo brctl setfd #{name} 0`
  `sudo ifconfig #{name} #{ip} up`
end

def configure_forwarding(host)
  `sudo iptables -t nat -A POSTROUTING -o #{host} -j MASQUERADE`
  `sudo sysctl -w net.ipv4.ip_forward=1`
end

options = {
  :host => BRIDGE_HOST,
  :bridge_name => BRIDGE_NAME,
  :bridge_ip => BRIDGE_IP
}

optparse = OptionParser.new do |opts|
  opts.on('-h', '--help', 'Display this information.')     { puts(opts); exit }
  opts.on('--host INTERFACE', 'Host interface name')       { |v| options[:host] = v }
  opts.on('--bridge INTERFACE', 'Bridge interface name')   { |v| options[:bridge_name] = v }
  opts.on('--bridge-ip IP', 'Bridge interface IP address') { |v| options[:bridge_ip] = v }
end

begin
  optparse.parse!

  exit_with_message "lxc-setup-network is not supported by your platform" if !linux?

  configure_bridge(options[:bridge_name], options[:bridge_ip])
  configure_forwarding(options[:host])

rescue OptionParser::InvalidOption, OptionParser::MissingArgument => err
  STDERR.puts(err.message)
  exit(1)
end